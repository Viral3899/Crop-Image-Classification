stages:
  data_ingestion:
    cmd: python src/Crop_Image_Classification/pipeline/stage_01_data_ingestion.py
    deps:
      - src/Crop_Image_Classification/pipeline/stage_01_data_ingestion.py
      - config/config.yaml
    outs:
      - artifacts/data_ingestion/Agricultural-crops

  prepare_base_model:
    cmd: python src/Crop_Image_Classification/pipeline/stage_02_prepare_base_model.py
    deps:
      - src/Crop_Image_Classification/pipeline/stage_02_prepare_base_model.py
      - config/config.yaml
    params:
      - IMAGE_SIZE
      - INCLUDED_TOP
      - CLASSES
      - LEARNING_RATE
      - WEIGHTS

    outs:
      - artifacts/prepare_base_model
  
  training:
    cmd: python src/Crop_Image_Classification/pipeline/stage_03_training.py
    deps:
      - src/Crop_Image_Classification/pipeline/stage_03_training.py
      - src/Crop_Image_Classification/components/prepare_callbacks.py
      - config/config.yaml  
      - artifacts/data_ingestion/Agricultural-crops
      - artifacts/prepare_base_model
    params:
      - IMAGE_SIZE
      - EPOCHS
      - BATCH_SIZE
      - AUGMENTATION

    outs:
      - artifacts/training/model.h5


  evaluation:
    cmd: python src/Crop_Image_Classification/pipeline/stage_04_evaluation.py
    deps:
      - src/Crop_Image_Classification/pipeline/stage_04_evaluation.py
      - config/config.yaml
      - artifacts/data_ingestion/Agricultural-crops
      - artifacts/training/model.h5
    params:
      - IMAGE_SIZE
      - BATCH_SIZE
    metrics:
    - scores.json:
        cache: false
      
  
    